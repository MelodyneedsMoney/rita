{
  "class": "rita.Grammar",
  "fields": [],
  "statics": [
    {
      "name": "fromJSON",
      "example": "g = Grammar.fromJSON(jsonData);",
      "description": "Loads a grammar from a JSON file",
      "syntax": "Grammar.fromJSON(jsonData);",
      "parameters": [
        {
          "type": "String",
          "desc": "a JSON string containing the grammar"
        }
      ],
      "returns": [
        {
          "type": "Grammar",
          "desc": "a newly created Grammar object"
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "addRule",
      "example": "rg = new Grammar();<br/>rg.addRule(\"start\", \"\\$animal\");<br/>rg.addRule(\"animal\", \"cat | dog | chicken\");",
      "description": "Adds a rule to the existing grammar, replacing any existing rule with the same name",
      "syntax": "addRule(name, definition);",
      "parameters": [
        {
          "type": "String",
          "desc": "the rule name"
        },
        {
          "type": "String",
          "desc": "the rule definition"
        }
      ],
      "returns": [
        {
          "type": "Grammar",
          "desc": "this Grammar"
        }
      ]
    },
    {
      "name": "expand",
      "example": "rg = new Grammar(rules); <br/>result = rg.expand(ruleName);",
      "description": "Expands a grammar from the supplied rule. If no rule is provided the \\$start and #60;start&#62;' symbols will be checked respectively.",
      "syntax": "expand();<br/>expand(callbackobject);",
      "parameters": [
        {
          "type": "String",
          "desc": "the rule name to be expanded"
        },
        {
          "type": "object",
          "desc": "the JavaScript context for any referenced variables or functions (optional)"
        }
      ],
      "returns": [
        {
          "type": "String",
          "desc": "the result of the expansion (or an error if the rule is not found)"
        }
      ]
    },
    {
      "name": "removeRule",
      "example": "rg = new Grammar(); <br>rg.addRule(\"pet\", \"dog | hawk | crow\", 1); <br>rg.removeRule(\"pet\");",
      "description": "Deletes the named rule from the grammar",
      "syntax": "removeRule(name);",
      "parameters": [
        {
          "type": "String",
          "desc": "the rule name"
        }
      ],
      "returns": [
        {
          "type": "Grammar",
          "desc": "this Grammar"
        }
      ]
    },
    {
      "name": "setRules",
      "example": "rg = new Grammar(); <br>rg.setRules(rules);",
      "description": "Loads a grammar from a String or JSON object.",
      "syntax": "setRules(grammarRules);",
      "parameters": [
        {
          "type": "String or object",
          "desc": "a String or JSON object representation of the grammar"
        }
      ],
      "returns": [
        {
          "type": "object",
          "desc": "this Grammar object"
        }
      ]
    },
    {
      "name": "toString",
      "example": "rm = new Grammar(rules);<br/>s = rm.toString();",
      "description": "Returns a formatted version of this grammar",
      "syntax": "toString();",
      "parameters": [],
      "returns": [
        {
          "type": "String",
          "desc": "this object as a String"
        }
      ]
    },
    {
      "name": "toJSON",
      "example": "rm = new Grammar(rules);<br/>json = rm.toJSON();",
      "description": "Persists the grammar in JSON format",
      "syntax": "toJSON();",
      "parameters": [],
      "returns": [
        {
          "type": "String",
          "desc": "JSON representation"
        }
      ],
      "related": "",
      "platform": "Java / JavaScript",
      "note": ""
    }
  ]
}